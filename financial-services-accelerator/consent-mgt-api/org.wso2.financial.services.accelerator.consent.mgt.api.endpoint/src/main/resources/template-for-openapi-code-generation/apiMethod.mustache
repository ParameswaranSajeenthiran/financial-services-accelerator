    @{{httpMethod}}{{#subresourceOperation}}
    @Path("{{{path}}}"){{/subresourceOperation}}{{#hasConsumes}}
    @Consumes({ {{#consumes}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/consumes}} }){{/hasConsumes}}{{#hasProduces}}
    @Produces({ {{#produces}}"{{{mediaType}}}"{{^-last}}, {{/-last}}{{/produces}} }){{/hasProduces}}
    @Operation(
    summary = "{{{summary}}}",
    description = "{{{notes}}}",
    responses = {
    {{#responses}}
        @ApiResponse(
        responseCode = "{{{code}}}",
        description = "{{{message}}}"{{#baseType}},
        content = @Content(schema = @Schema(implementation = {{{baseType}}}.class{{#returnContainer}},
        type = "{{{.}}}"{{/returnContainer}})){{/baseType}}
        ){{^-last}},{{/-last}}{{/responses}}
    }
    )
    @Tag(name = "{{#vendorExtensions.x-tags}}{{tag}}{{/vendorExtensions.x-tags}}")
    public {{#supportAsync}}CompletionStage<{{/supportAsync}}Response{{#supportAsync}}>{{/supportAsync}} {{nickname}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>cookieParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{^-last}},{{/-last}}{{/allParams}}) {

            return consentApiImpl.{{nickname}}({{#allParams}}{{>param}}{{^-last}},{{/-last}}{{/allParams}});

    }